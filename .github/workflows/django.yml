name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        pytest .
        flake8 --max-line-length=150 .
   
  build_wheels:
      name: Build wheels on $
      runs-on: $
      strategy:
        matrix:
          os: [windows-2019, macos-10.15]

      steps:
      - uses: actions/checkout@v2

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.5.0
        env:
          CIBW_ARCHS_WINDOWS: AMD64
          CIBW_ARCHS_MACOS: x86_64
          CIBW_ARCHS_LINUX: "x86_64 aarch64"
          CIBW_SKIP: "pp* *-win32 *-manylinux_i686"

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
     name: Build source distribution
     runs-on: ubuntu-latest
     steps:
     - uses: actions/checkout@v2

     - name: Build sdist
       run: pipx run build --sdist

     - uses: actions/upload-artifact@v2
       with:
          path: dist/*.tar.gz
            
  upload_pypi:
     needs: [build_wheels, build_sdist]
     runs-on: ubuntu-latest
     # upload to PyPI on every tag starting with 'v'
     if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
     # alternatively, to publish when a GitHub Release is created, use the following rule:
     # if: github.event_name == 'release' && github.event.action == 'published'
     steps:
     - uses: actions/download-artifact@v2
       with:
         name: artifact
         path: dist

     - uses: pypa/gh-action-pypi-publish@v1.4.2
       with:
         user: __token__
         password: $
         skip_existing: true

